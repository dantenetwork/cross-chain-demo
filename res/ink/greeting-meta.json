{
  "source": {
    "hash": "0xcde75c71e910f5a8e9de598180d1eb65d8d9fefdc060df977d32e5c9e6e52bac",
    "language": "ink! 4.0.0-alpha.3",
    "compiler": "rustc 1.64.0"
  },
  "contract": {
    "name": "greeting",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [],
        "docs": [],
        "label": "new",
        "payable": false,
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "events": [],
    "messages": [
      {
        "args": [
          {
            "label": "contract",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Initializes the contract with the specified chain name.",
          "Sets cross-chain contract address"
        ],
        "label": "set_cross_chain_contract",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 5
        },
        "selector": "0x82b64ebd"
      },
      {
        "args": [
          {
            "label": "chain_name",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 3
            }
          },
          {
            "label": "greeting",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 7
            }
          }
        ],
        "docs": [
          "Sends greeting to another chain"
        ],
        "label": "send_greeting",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 8
        },
        "selector": "0xdc2090de"
      },
      {
        "args": [
          {
            "label": "payload",
            "type": {
              "displayName": [
                "MessagePayload"
              ],
              "type": 10
            }
          }
        ],
        "docs": [
          "Receives greeting from another chain"
        ],
        "label": "receive_greeting",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "String"
          ],
          "type": 3
        },
        "selector": "0x0c724dc2"
      },
      {
        "args": [
          {
            "label": "key",
            "type": {
              "displayName": [],
              "type": 34
            }
          }
        ],
        "docs": [
          "Receives message from another chain"
        ],
        "label": "get_ret",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "String"
          ],
          "type": 3
        },
        "selector": "0xf788434c"
      },
      {
        "args": [],
        "docs": [
          "Returns the account id of the current owner"
        ],
        "label": "Ownable::owner",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "Option"
          ],
          "type": 35
        },
        "selector": "0x4fa43c8c"
      },
      {
        "args": [],
        "docs": [
          "Renounces ownership of the contract"
        ],
        "label": "Ownable::renounce_ownership",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 5
        },
        "selector": "0x5e228753"
      },
      {
        "args": [
          {
            "label": "new_owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Transfer ownership to a new account id"
        ],
        "label": "Ownable::transfer_ownership",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 5
        },
        "selector": "0x11f43efd"
      },
      {
        "args": [
          {
            "label": "chain_name",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 3
            }
          },
          {
            "label": "action",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 3
            }
          }
        ],
        "docs": [],
        "label": "MultiDestContracts::get_dest_contract_info",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "Option"
          ],
          "type": 36
        },
        "selector": "0x0316006d"
      },
      {
        "args": [
          {
            "label": "chain_name",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 3
            }
          },
          {
            "label": "action",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 3
            }
          },
          {
            "label": "contract",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 4
            }
          },
          {
            "label": "dest_action",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "label": "MultiDestContracts::register_dest_contract",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 5
        },
        "selector": "0xa6d99d73"
      },
      {
        "args": [
          {
            "label": "sqos_item",
            "type": {
              "displayName": [
                "ISQoS"
              ],
              "type": 38
            }
          }
        ],
        "docs": [
          "Inserts one SQoS item.",
          "If the item exists, it will be replaced."
        ],
        "label": "CrossChainSQoS::insert",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 5
        },
        "selector": "0x31bc887f"
      },
      {
        "args": [
          {
            "label": "sqos_type",
            "type": {
              "displayName": [
                "ISQoSType"
              ],
              "type": 39
            }
          }
        ],
        "docs": [
          "Removes one SQoS item."
        ],
        "label": "CrossChainSQoS::remove",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 5
        },
        "selector": "0xda5e06d0"
      },
      {
        "args": [],
        "docs": [
          "Clear all SQoS items."
        ],
        "label": "CrossChainSQoS::clear",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 5
        },
        "selector": "0xc857c735"
      },
      {
        "args": [
          {
            "label": "sqos",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 40
            }
          }
        ],
        "docs": [
          "Sets SQoS items"
        ],
        "label": "CrossChainSQoS::set",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "Result"
          ],
          "type": 5
        },
        "selector": "0x7aebdd43"
      },
      {
        "args": [],
        "docs": [
          "Returns SQoS items"
        ],
        "label": "CrossChainSQoS::get",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "Vec"
          ],
          "type": 40
        },
        "selector": "0x4b654380"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "enum": {
                  "dispatchKey": "0x00000000",
                  "name": "Option",
                  "variants": {
                    "0": {
                      "fields": [],
                      "name": "None"
                    },
                    "1": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x00000000",
                              "ty": 0
                            }
                          },
                          "name": "0"
                        }
                      ],
                      "name": "Some"
                    }
                  }
                }
              },
              "name": "owner"
            },
            {
              "layout": {
                "enum": {
                  "dispatchKey": "0x00000000",
                  "name": "Option",
                  "variants": {
                    "0": {
                      "fields": [],
                      "name": "None"
                    },
                    "1": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x00000000",
                              "ty": 0
                            }
                          },
                          "name": "0"
                        }
                      ],
                      "name": "Some"
                    }
                  }
                }
              },
              "name": "cross_chain_contract"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "leaf": {
                      "key": "0x09b1e38d",
                      "ty": 3
                    }
                  },
                  "root_key": "0x09b1e38d"
                }
              },
              "name": "ret"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0xac72a4cc",
                              "ty": 4
                            }
                          },
                          "name": "0"
                        },
                        {
                          "layout": {
                            "leaf": {
                              "key": "0xac72a4cc",
                              "ty": 4
                            }
                          },
                          "name": "1"
                        }
                      ],
                      "name": "(A, B)"
                    }
                  },
                  "root_key": "0xac72a4cc"
                }
              },
              "name": "dest_contract_map"
            }
          ],
          "name": "Greeting"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "primitive": "str"
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "sequence": {
            "type": 2
          }
        }
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 6
          },
          {
            "name": "E",
            "type": 2
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "sequence": {
            "type": 3
          }
        }
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 6
          },
          {
            "name": "E",
            "type": 9
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "MethodNotRegisterd"
              }
            ]
          }
        },
        "path": [
          "greeting",
          "greeting",
          "Error"
        ]
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "items",
                "type": 11,
                "typeName": "Option<ink::prelude::vec::Vec<MessageItem>>"
              }
            ]
          }
        },
        "path": [
          "payload",
          "message_protocol",
          "MessagePayload"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 12
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 12
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "sequence": {
            "type": 13
          }
        }
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "n",
                "type": 3,
                "typeName": "ink::prelude::string::String"
              },
              {
                "name": "tv",
                "type": 14,
                "typeName": "MsgDetail"
              }
            ]
          }
        },
        "path": [
          "payload",
          "message_protocol",
          "MessageItem"
        ]
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 0,
                "name": "InkString"
              },
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 1,
                "name": "InkU8"
              },
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 2,
                "name": "InkU16"
              },
              {
                "fields": [
                  {
                    "type": 16
                  }
                ],
                "index": 3,
                "name": "InkU32"
              },
              {
                "fields": [
                  {
                    "type": 17
                  }
                ],
                "index": 4,
                "name": "InkU64"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 5,
                "name": "InkU128"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 6,
                "name": "InkI8"
              },
              {
                "fields": [
                  {
                    "type": 20
                  }
                ],
                "index": 7,
                "name": "InkI16"
              },
              {
                "fields": [
                  {
                    "type": 21
                  }
                ],
                "index": 8,
                "name": "InkI32"
              },
              {
                "fields": [
                  {
                    "type": 22
                  }
                ],
                "index": 9,
                "name": "InkI64"
              },
              {
                "fields": [
                  {
                    "type": 23
                  }
                ],
                "index": 10,
                "name": "InkI128"
              },
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 11,
                "name": "InkStringArray"
              },
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 12,
                "name": "InkU8Array"
              },
              {
                "fields": [
                  {
                    "type": 24
                  }
                ],
                "index": 13,
                "name": "InkU16Array"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 14,
                "name": "InkU32Array"
              },
              {
                "fields": [
                  {
                    "type": 26
                  }
                ],
                "index": 15,
                "name": "InkU64Array"
              },
              {
                "fields": [
                  {
                    "type": 27
                  }
                ],
                "index": 16,
                "name": "InkU128Array"
              },
              {
                "fields": [
                  {
                    "type": 28
                  }
                ],
                "index": 17,
                "name": "InkI8Array"
              },
              {
                "fields": [
                  {
                    "type": 29
                  }
                ],
                "index": 18,
                "name": "InkI16Array"
              },
              {
                "fields": [
                  {
                    "type": 30
                  }
                ],
                "index": 19,
                "name": "InkI32Array"
              },
              {
                "fields": [
                  {
                    "type": 31
                  }
                ],
                "index": 20,
                "name": "InkI64Array"
              },
              {
                "fields": [
                  {
                    "type": 32
                  }
                ],
                "index": 21,
                "name": "InkI128Array"
              },
              {
                "fields": [
                  {
                    "type": 33
                  }
                ],
                "index": 22,
                "name": "InkAddress"
              },
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 23,
                "name": "UserData"
              }
            ]
          }
        },
        "path": [
          "payload",
          "message_protocol",
          "MsgDetail"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "primitive": "u16"
        }
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "primitive": "i8"
        }
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "primitive": "i16"
        }
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "primitive": "i32"
        }
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "primitive": "i64"
        }
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "primitive": "i128"
        }
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "sequence": {
            "type": 15
          }
        }
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "sequence": {
            "type": 16
          }
        }
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "sequence": {
            "type": 17
          }
        }
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "sequence": {
            "type": 18
          }
        }
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "sequence": {
            "type": 19
          }
        }
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "sequence": {
            "type": 20
          }
        }
      }
    },
    {
      "id": 30,
      "type": {
        "def": {
          "sequence": {
            "type": 21
          }
        }
      }
    },
    {
      "id": 31,
      "type": {
        "def": {
          "sequence": {
            "type": 22
          }
        }
      }
    },
    {
      "id": 32,
      "type": {
        "def": {
          "sequence": {
            "type": 23
          }
        }
      }
    },
    {
      "id": 33,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "ink_address",
                "type": 4,
                "typeName": "ink::prelude::vec::Vec<u8>"
              },
              {
                "name": "address_type",
                "type": 2,
                "typeName": "u8"
              }
            ]
          }
        },
        "path": [
          "payload",
          "message_protocol",
          "InkAddressData"
        ]
      }
    },
    {
      "id": 34,
      "type": {
        "def": {
          "tuple": [
            3,
            18
          ]
        }
      }
    },
    {
      "id": 35,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 36,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 37
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 37
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 37,
      "type": {
        "def": {
          "tuple": [
            4,
            4
          ]
        }
      }
    },
    {
      "id": 38,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "t",
                "type": 39,
                "typeName": "ISQoSType"
              },
              {
                "name": "v",
                "type": 4,
                "typeName": "ink::prelude::vec::Vec<u8>"
              }
            ]
          }
        },
        "path": [
          "payload",
          "message_define",
          "ISQoS"
        ]
      }
    },
    {
      "id": 39,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "Reveal"
              },
              {
                "index": 1,
                "name": "Challenge"
              },
              {
                "index": 2,
                "name": "Threshold"
              },
              {
                "index": 3,
                "name": "Priority"
              },
              {
                "index": 4,
                "name": "ExceptionRollback"
              },
              {
                "index": 5,
                "name": "SelectionDelay"
              },
              {
                "index": 6,
                "name": "Anonymous"
              },
              {
                "index": 7,
                "name": "Identity"
              },
              {
                "index": 8,
                "name": "Isolation"
              },
              {
                "index": 9,
                "name": "CrossVerify"
              }
            ]
          }
        },
        "path": [
          "payload",
          "message_define",
          "ISQoSType"
        ]
      }
    },
    {
      "id": 40,
      "type": {
        "def": {
          "sequence": {
            "type": 38
          }
        }
      }
    }
  ],
  "version": "4"
}